{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np  \n",
    "import matplotlib.pyplot as plt  \n",
    "import pandas as pd  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv('B:\\w.csv',usecols=['latitude','longitude','cluster'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      latitude  longitude  cluster\n",
      "0    40.719810 -74.002581        0\n",
      "1    40.745164 -73.982519        0\n",
      "2    40.740104 -73.989658        0\n",
      "3    40.751591 -73.974121        0\n",
      "4    40.779422 -73.955341        0\n",
      "5    40.743483 -73.994009        0\n",
      "6    40.742608 -73.992705        0\n",
      "7    40.741191 -73.989663        0\n",
      "8    40.704588 -74.009639        0\n",
      "9    40.826790 -73.949509        0\n",
      "10   40.755275 -73.978806        0\n",
      "11   40.742816 -74.000406        0\n",
      "12   40.760673 -74.003677        0\n",
      "13   40.736676 -73.988910        0\n",
      "14   40.790599 -73.980234        0\n",
      "15   40.752307 -73.971854        0\n",
      "16   40.741862 -73.989434        0\n",
      "17   40.750946 -74.005634        0\n",
      "18   40.747738 -73.985198        0\n",
      "19   40.731698 -73.989227        0\n",
      "20   40.826508 -73.950391        0\n",
      "21   40.742188 -73.987924        0\n",
      "22   40.741408 -73.988438        0\n",
      "23   40.697433 -73.993043        0\n",
      "24   40.778078 -73.954492        0\n",
      "25   40.728172 -74.007522        0\n",
      "26   40.779014 -73.954039        0\n",
      "27   40.776158 -73.823616        1\n",
      "28   40.750623 -73.990042        0\n",
      "29   40.688930 -73.995666        0\n",
      "..         ...        ...      ...\n",
      "339  40.750795 -73.993576        0\n",
      "340  40.750795 -73.993576        0\n",
      "341  40.758505 -73.989143        0\n",
      "342  40.744901 -73.998059        0\n",
      "343  40.748622 -74.038925        2\n",
      "344  40.783222 -73.833446        1\n",
      "345  40.747513 -73.997875        0\n",
      "346  40.718002 -73.990283        0\n",
      "347  40.742851 -74.006374        0\n",
      "348  40.773560 -73.983144        0\n",
      "349  40.749390 -73.982862        0\n",
      "350  40.741198 -74.002392        0\n",
      "351  40.739673 -74.001697        0\n",
      "352  40.744557 -73.990650        0\n",
      "353  40.812188 -73.955376        0\n",
      "354  40.771426 -73.973501        0\n",
      "355  40.765279 -73.816574        1\n",
      "356  40.735219 -74.009949        0\n",
      "357  40.744425 -73.996492        0\n",
      "358  40.731156 -73.988728        0\n",
      "359  40.678093 -73.973312        0\n",
      "360  40.720582 -73.992714        0\n",
      "361  40.753042 -73.989072        0\n",
      "362  40.765262 -73.980033        0\n",
      "363  40.714605 -74.008056        0\n",
      "364  40.707498 -74.002082        0\n",
      "365  40.935400 -74.071369        3\n",
      "366  40.704273 -73.986759        0\n",
      "367  40.762827 -73.973370        0\n",
      "368  40.737535 -73.990302        0\n",
      "\n",
      "[369 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "print(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = data.iloc[:, :2].values \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "y = data.iloc[:,2].values  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 40.71981038 -74.00258103]\n",
      " [ 40.7451638  -73.98251878]\n",
      " [ 40.74010383 -73.98965836]\n",
      " [ 40.75159143 -73.9741214 ]\n",
      " [ 40.77942173 -73.95534113]\n",
      " [ 40.74348254 -73.994009  ]\n",
      " [ 40.74260751 -73.99270535]\n",
      " [ 40.74119055 -73.9896631 ]\n",
      " [ 40.7045885  -74.00963933]\n",
      " [ 40.82678954 -73.94950924]\n",
      " [ 40.75527488 -73.97880614]\n",
      " [ 40.74281621 -74.00040611]\n",
      " [ 40.76067265 -74.00367709]\n",
      " [ 40.736676   -73.98891   ]\n",
      " [ 40.79059947 -73.98023378]\n",
      " [ 40.75230661 -73.97185432]\n",
      " [ 40.74186151 -73.98943363]\n",
      " [ 40.75094552 -74.00563392]\n",
      " [ 40.74773817 -73.98519815]\n",
      " [ 40.731698   -73.98922694]\n",
      " [ 40.82650767 -73.95039082]\n",
      " [ 40.74218831 -73.98792419]\n",
      " [ 40.7414075  -73.98843795]\n",
      " [ 40.69743322 -73.9930433 ]\n",
      " [ 40.77807781 -73.95449162]\n",
      " [ 40.72817168 -74.00752187]\n",
      " [ 40.77901409 -73.95403862]\n",
      " [ 40.77615805 -73.82361593]\n",
      " [ 40.75062326 -73.99004187]\n",
      " [ 40.68892999 -73.9956665 ]\n",
      " [ 40.727612   -74.007306  ]\n",
      " [ 40.77843897 -73.95451458]\n",
      " [ 40.76391921 -73.97313996]\n",
      " [ 40.81721954 -73.94790173]\n",
      " [ 40.785679   -73.972834  ]\n",
      " [ 40.69684128 -73.98717238]\n",
      " [ 40.73971083 -73.98251798]\n",
      " [ 40.7509958  -73.99068832]\n",
      " [ 40.75061379 -73.98856401]\n",
      " [ 40.75110146 -73.98130059]\n",
      " [ 40.708515   -74.007282  ]\n",
      " [ 40.76260087 -73.9660057 ]\n",
      " [ 40.69541297 -73.98732159]\n",
      " [ 40.67919    -73.995548  ]\n",
      " [ 40.80463955 -73.93786213]\n",
      " [ 40.74790921 -73.98380928]\n",
      " [ 40.71589126 -74.03416157]\n",
      " [ 40.77536339 -73.955705  ]\n",
      " [ 40.745245   -73.982692  ]\n",
      " [ 40.70473328 -73.98773789]\n",
      " [ 40.74697652 -73.98325259]\n",
      " [ 40.75951305 -73.8314724 ]\n",
      " [ 40.72703111 -74.03484821]\n",
      " [ 40.7514116  -73.97994108]\n",
      " [ 40.75539132 -73.97425915]\n",
      " [ 40.71528089 -74.03639537]\n",
      " [ 40.75821277 -73.98682594]\n",
      " [ 40.76235954 -73.97223886]\n",
      " [ 40.74546291 -73.99098305]\n",
      " [ 40.80870048 -73.95851531]\n",
      " [ 40.74404465 -73.98373696]\n",
      " [ 40.7228417  -73.99411647]\n",
      " [ 40.74623905 -73.98058961]\n",
      " [ 40.75931346 -73.97849478]\n",
      " [ 40.72828342 -73.987885  ]\n",
      " [ 40.738553   -73.987393  ]\n",
      " [ 40.77352188 -73.9567852 ]\n",
      " [ 40.72862394 -74.005252  ]\n",
      " [ 40.77834721 -73.980903  ]\n",
      " [ 40.74828059 -73.98556262]\n",
      " [ 40.74837051 -73.98568869]\n",
      " [ 40.70242744 -73.99048448]\n",
      " [ 40.74277821 -73.99833798]\n",
      " [ 40.78280364 -73.95175936]\n",
      " [ 40.73083612 -73.99764061]\n",
      " [ 40.730769   -73.9974505 ]\n",
      " [ 40.75850534 -73.97652626]\n",
      " [ 40.707149   -73.99057   ]\n",
      " [ 40.774111   -73.959546  ]\n",
      " [ 40.73652697 -73.99055958]\n",
      " [ 40.75061379 -73.98856401]\n",
      " [ 40.7356185  -73.99721414]\n",
      " [ 40.74434648 -73.99543065]\n",
      " [ 40.70924712 -74.01355147]\n",
      " [ 40.7111095  -74.00504351]\n",
      " [ 40.95158381 -74.08855677]\n",
      " [ 40.72555133 -73.99476528]\n",
      " [ 40.7125896  -74.00632024]\n",
      " [ 40.738949   -73.989828  ]\n",
      " [ 40.74019488 -73.98346494]\n",
      " [ 40.82670252 -73.95129204]\n",
      " [ 40.7495279  -73.9947032 ]\n",
      " [ 40.74914242 -73.97505118]\n",
      " [ 40.76050366 -73.94384937]\n",
      " [ 40.71885936 -73.98790956]\n",
      " [ 40.791172   -73.944024  ]\n",
      " [ 40.78911988 -73.97335052]\n",
      " [ 40.75280621 -73.97717535]\n",
      " [ 40.79924638 -73.93220767]\n",
      " [ 40.770849   -73.98224824]\n",
      " [ 40.71980773 -74.00992625]\n",
      " [ 40.73447832 -73.99024844]\n",
      " [ 40.7575648  -73.96864592]\n",
      " [ 40.72098907 -73.98104875]\n",
      " [ 40.72098907 -73.98104875]\n",
      " [ 40.69754695 -73.99300314]\n",
      " [ 40.96577081 -74.07566071]\n",
      " [ 40.75261955 -73.99336294]\n",
      " [ 40.74404732 -73.98402737]\n",
      " [ 40.70964742 -74.0105173 ]\n",
      " [ 40.70972827 -74.01076978]\n",
      " [ 40.70491221 -74.01401281]\n",
      " [ 40.78986319 -73.94593309]\n",
      " [ 40.703253   -74.01422739]\n",
      " [ 40.72741096 -73.9847218 ]\n",
      " [ 40.741579   -74.029635  ]\n",
      " [ 40.73797973 -74.03076102]\n",
      " [ 40.731786   -73.983701  ]\n",
      " [ 40.75884666 -73.98955107]\n",
      " [ 40.70972827 -74.01076978]\n",
      " [ 40.70145732 -74.01321429]\n",
      " [ 40.72434796 -73.99731874]\n",
      " [ 40.76050819 -73.96744635]\n",
      " [ 40.74763189 -73.98638613]\n",
      " [ 40.76147154 -73.96677375]\n",
      " [ 40.72603917 -73.9820838 ]\n",
      " [ 40.69594185 -73.99039194]\n",
      " [ 40.72634865 -73.98415715]\n",
      " [ 40.72435967 -73.99747938]\n",
      " [ 40.74866718 -73.98837626]\n",
      " [ 40.76170986 -73.96013969]\n",
      " [ 40.82527366 -73.92996311]\n",
      " [ 40.82720715 -73.92603063]\n",
      " [ 40.7394648  -74.00265604]\n",
      " [ 40.8102201  -73.96047592]\n",
      " [ 40.702345   -73.9906849 ]\n",
      " [ 40.71800153 -73.9902829 ]\n",
      " [ 40.71800153 -73.9902829 ]\n",
      " [ 40.69977177 -74.01339054]\n",
      " [ 40.75269756 -73.99003613]\n",
      " [ 40.76504877 -73.81954351]\n",
      " [ 40.7352825  -73.99040315]\n",
      " [ 40.73506259 -73.99080514]\n",
      " [ 40.74871699 -73.98815949]\n",
      " [ 40.76528966 -73.81984794]\n",
      " [ 40.70554075 -74.00825638]\n",
      " [ 40.69351488 -73.99171189]\n",
      " [ 40.95589867 -74.06818444]\n",
      " [ 40.6941573  -73.99187258]\n",
      " [ 40.95634252 -74.06902772]\n",
      " [ 40.75003444 -73.98903755]\n",
      " [ 40.75280621 -73.97717535]\n",
      " [ 40.75323992 -73.97408696]\n",
      " [ 40.75005298 -73.97360802]\n",
      " [ 40.95617    -74.06845   ]\n",
      " [ 40.95653462 -74.06909466]\n",
      " [ 40.74902921 -73.99237186]\n",
      " [ 40.74910526 -73.9882054 ]\n",
      " [ 40.7451207  -73.99247516]\n",
      " [ 40.95620483 -74.06860321]\n",
      " [ 40.76686967 -73.99496581]\n",
      " [ 40.74951365 -73.98762576]\n",
      " [ 40.74405042 -73.97309978]\n",
      " [ 40.70771001 -74.01056349]\n",
      " [ 40.75650613 -73.98802757]\n",
      " [ 40.73083612 -73.99764061]\n",
      " [ 40.73977359 -74.00257587]\n",
      " [ 40.74182628 -74.00381482]\n",
      " [ 40.8247747  -73.9442163 ]\n",
      " [ 40.74129321 -74.00299421]\n",
      " [ 40.74201604 -74.00516337]\n",
      " [ 40.74774465 -73.98530245]\n",
      " [ 40.75696158 -73.98982379]\n",
      " [ 40.75047562 -73.94028425]\n",
      " [ 40.69321652 -73.989999  ]\n",
      " [ 40.75083637 -73.94011813]\n",
      " [ 40.7352825  -73.99040315]\n",
      " [ 40.729369   -73.998868  ]\n",
      " [ 40.72898243 -73.99583817]\n",
      " [ 40.73702363 -73.98658126]\n",
      " [ 40.73037925 -73.99595862]\n",
      " [ 40.71242696 -73.98925066]\n",
      " [ 40.75237023 -73.99955105]\n",
      " [ 40.83592439 -73.92185211]\n",
      " [ 40.71278478 -73.98929358]\n",
      " [ 40.71293259 -73.98744202]\n",
      " [ 40.7575648  -73.96864592]\n",
      " [ 40.7373     -74.03744   ]\n",
      " [ 40.73729142 -74.03733633]\n",
      " [ 40.69147465 -73.98738384]\n",
      " [ 40.75771821 -73.97769128]\n",
      " [ 40.729545   -73.986137  ]\n",
      " [ 40.70311887 -73.987736  ]\n",
      " [ 40.73736755 -73.99015091]\n",
      " [ 40.7064404  -74.00612169]\n",
      " [ 40.732431   -73.989988  ]\n",
      " [ 40.74621884 -73.98151936]\n",
      " [ 40.68430738 -73.9775978 ]\n",
      " [ 40.71250828 -74.00766134]\n",
      " [ 40.81554068 -73.95842347]\n",
      " [ 40.800356   -73.94687168]\n",
      " [ 40.94709963 -74.072561  ]\n",
      " [ 40.82809887 -73.93391132]\n",
      " [ 40.82134415 -73.95403862]\n",
      " [ 40.71814377 -74.00015652]\n",
      " [ 40.75275186 -73.97305387]\n",
      " [ 40.70596204 -74.01125754]\n",
      " [ 40.74803726 -73.94687176]\n",
      " [ 40.74790921 -73.98380928]\n",
      " [ 40.71446409 -73.99911582]\n",
      " [ 40.75451688 -73.97339823]\n",
      " [ 40.96541694 -74.06288376]\n",
      " [ 40.7537156  -73.98094722]\n",
      " [ 40.75561215 -73.97092581]\n",
      " [ 40.76355592 -73.97286773]\n",
      " [ 40.77589237 -73.95573145]\n",
      " [ 40.75356409 -73.97953033]\n",
      " [ 40.716391   -74.033866  ]\n",
      " [ 40.75609848 -73.97226182]\n",
      " [ 40.71559314 -74.00625368]\n",
      " [ 40.78302026 -73.94907872]\n",
      " [ 40.71178449 -74.00208235]\n",
      " [ 40.756676   -73.972307  ]\n",
      " [ 40.71421606 -74.00596619]\n",
      " [ 40.71265873 -74.00588036]\n",
      " [ 40.75803174 -73.97142386]\n",
      " [ 40.733123   -73.99842497]\n",
      " [ 40.76776    -73.964527  ]\n",
      " [ 40.810203   -73.943523  ]\n",
      " [ 40.76028084 -73.95057116]\n",
      " [ 40.747558   -73.993104  ]\n",
      " [ 40.71203303 -74.00699299]\n",
      " [ 40.7312265  -73.98887973]\n",
      " [ 40.706904   -74.00367   ]\n",
      " [ 40.77799852 -73.95386021]\n",
      " [ 40.68047836 -73.97497083]\n",
      " [ 40.7572213  -73.99154663]\n",
      " [ 40.74911015 -73.98845673]\n",
      " [ 40.76562484 -73.96783664]\n",
      " [ 40.75602574 -73.97033335]\n",
      " [ 40.747842   -74.030874  ]\n",
      " [ 40.75557964 -73.97086143]\n",
      " [ 40.75892783 -73.96144262]\n",
      " [ 40.75918262 -73.96217732]\n",
      " [ 40.7111095  -74.00504351]\n",
      " [ 40.70311887 -73.987736  ]\n",
      " [ 40.764016   -73.82947598]\n",
      " [ 40.71655808 -74.00008678]\n",
      " [ 40.71068343 -74.00461247]\n",
      " [ 40.74227764 -73.98525554]\n",
      " [ 40.71713766 -74.03891414]\n",
      " [ 40.77912607 -73.95490489]\n",
      " [ 40.720582   -74.002051  ]\n",
      " [ 40.8168158  -73.9413925 ]\n",
      " [ 40.7534178  -73.99629951]\n",
      " [ 40.763157   -73.977109  ]\n",
      " [ 40.733848   -74.00505   ]\n",
      " [ 40.75648987 -73.98626804]\n",
      " [ 40.72078652 -74.00197506]\n",
      " [ 40.752067   -73.987573  ]\n",
      " [ 40.677036   -73.972353  ]\n",
      " [ 40.67929277 -73.99570611]\n",
      " [ 40.70860893 -74.01209533]\n",
      " [ 40.72343212 -74.00055531]\n",
      " [ 40.70919832 -74.01118577]\n",
      " [ 40.75063222 -73.98906051]\n",
      " [ 40.74272122 -73.9927621 ]\n",
      " [ 40.73874326 -73.99455836]\n",
      " [ 40.74399459 -73.99562577]\n",
      " [ 40.73228891 -74.01051196]\n",
      " [ 40.76117086 -74.01128769]\n",
      " [ 40.73308    -73.99987221]\n",
      " [ 40.73158409 -74.00021553]\n",
      " [ 40.96532878 -74.06292392]\n",
      " [ 40.75615113 -73.978965  ]\n",
      " [ 40.76042729 -73.9776957 ]\n",
      " [ 40.740223   -73.982688  ]\n",
      " [ 40.75531235 -73.98122092]\n",
      " [ 40.74910208 -73.98219084]\n",
      " [ 40.76082189 -73.9756079 ]\n",
      " [ 40.74611902 -73.99307013]\n",
      " [ 40.7475513  -73.98114057]\n",
      " [ 40.75485026 -73.98800494]\n",
      " [ 40.70445914 -74.00578312]\n",
      " [ 40.75280621 -73.97717535]\n",
      " [ 40.71398175 -74.00595528]\n",
      " [ 40.77943655 -73.80902767]\n",
      " [ 40.75061379 -73.98856401]\n",
      " [ 40.777543   -73.813097  ]\n",
      " [ 40.74716991 -74.00063565]\n",
      " [ 40.75280621 -73.97717535]\n",
      " [ 40.71925781 -74.04154301]\n",
      " [ 40.75313016 -73.97621627]\n",
      " [ 40.72828321 -73.9955914 ]\n",
      " [ 40.75811657 -73.99289984]\n",
      " [ 40.75044966 -73.9914479 ]\n",
      " [ 40.78596808 -73.81624281]\n",
      " [ 40.76368781 -73.96763002]\n",
      " [ 40.70972827 -74.01076978]\n",
      " [ 40.720097   -73.988457  ]\n",
      " [ 40.74516544 -73.97684186]\n",
      " [ 40.77792543 -73.96661282]\n",
      " [ 40.76169544 -73.92852213]\n",
      " [ 40.73946789 -74.00756778]\n",
      " [ 40.76215646 -73.9660918 ]\n",
      " [ 40.69001786 -73.99341633]\n",
      " [ 40.73757    -74.0017    ]\n",
      " [ 40.72498508 -73.99588975]\n",
      " [ 40.71536266 -73.99738756]\n",
      " [ 40.72416908 -73.99721146]\n",
      " [ 40.76502267 -73.98019552]\n",
      " [ 40.7435646  -73.98216215]\n",
      " [ 40.74355232 -73.98197849]\n",
      " [ 40.74510704 -73.97835016]\n",
      " [ 40.94931792 -74.08792872]\n",
      " [ 40.94766989 -74.08349276]\n",
      " [ 40.77519536 -73.81249842]\n",
      " [ 40.77519536 -73.81249842]\n",
      " [ 40.81592792 -73.9580102 ]\n",
      " [ 40.71948549 -74.04270172]\n",
      " [ 40.71789169 -73.99794102]\n",
      " [ 40.72611538 -73.98368876]\n",
      " [ 40.75831462 -73.97728379]\n",
      " [ 40.73416939 -74.02823925]\n",
      " [ 40.74554431 -73.98028543]\n",
      " [ 40.753422   -73.986822  ]\n",
      " [ 40.74581151 -73.98004438]\n",
      " [ 40.74897598 -73.99518389]\n",
      " [ 40.74218831 -73.98792419]\n",
      " [ 40.70819    -74.00648   ]\n",
      " [ 40.73328972 -74.00576017]\n",
      " [ 40.73046579 -73.98927859]\n",
      " [ 40.74455699 -73.99065019]\n",
      " [ 40.79152    -73.94579038]\n",
      " [ 40.75609978 -73.98785591]\n",
      " [ 40.704316   -74.013381  ]\n",
      " [ 40.75637696 -73.96765298]\n",
      " [ 40.72333141 -73.9895311 ]\n",
      " [ 40.73275832 -73.98576631]\n",
      " [ 40.7507948  -73.99357639]\n",
      " [ 40.7507948  -73.99357639]\n",
      " [ 40.75850534 -73.98914337]\n",
      " [ 40.74490102 -73.99805899]\n",
      " [ 40.74862247 -74.03892517]\n",
      " [ 40.78322232 -73.8334465 ]\n",
      " [ 40.74751348 -73.99787536]\n",
      " [ 40.71800153 -73.9902829 ]\n",
      " [ 40.74285137 -74.00637388]\n",
      " [ 40.77355997 -73.98314354]\n",
      " [ 40.74939033 -73.98286233]\n",
      " [ 40.74119772 -74.00239166]\n",
      " [ 40.73967263 -74.00169729]\n",
      " [ 40.74455699 -73.99065019]\n",
      " [ 40.81218841 -73.95537557]\n",
      " [ 40.77142562 -73.97350073]\n",
      " [ 40.765279   -73.81657386]\n",
      " [ 40.73521866 -74.0099492 ]\n",
      " [ 40.74442474 -73.99649232]\n",
      " [ 40.73115587 -73.98872765]\n",
      " [ 40.678093   -73.973312  ]\n",
      " [ 40.720582   -73.992714  ]\n",
      " [ 40.7530419  -73.98907199]\n",
      " [ 40.76526206 -73.9800329 ]\n",
      " [ 40.71460492 -74.00805554]\n",
      " [ 40.70749795 -74.00208178]\n",
      " [ 40.93539993 -74.07136917]\n",
      " [ 40.70427281 -73.98675917]\n",
      " [ 40.76282703 -73.97336954]\n",
      " [ 40.73753501 -73.99030209]]\n"
     ]
    }
   ],
   "source": [
    "print(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0\n",
      " 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 3\n",
      " 0 3 0 0 0 0 3 3 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n",
      " 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 2 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 2 0 0 0 0\n",
      " 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 1 1 0 2 0 0 0 2 0 0 0 0 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 0 0 0]\n"
     ]
    }
   ],
   "source": [
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split  \n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler  \n",
    "scaler = StandardScaler()  \n",
    "scaler.fit(X_train)\n",
    "\n",
    "X_train = scaler.transform(X_train)  \n",
    "X_test = scaler.transform(X_test)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
       "           metric_params=None, n_jobs=1, n_neighbors=5, p=2,\n",
       "           weights='uniform')"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier  \n",
    "classifier = KNeighborsClassifier(n_neighbors=5)  \n",
    "classifier.fit(X_train, y_train)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = classifier.predict(X_test)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n",
      " 3 3 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 3 0 0 0 3 0 0 0 0 0]\n"
     ]
    }
   ],
   "source": [
    "print(y_pred )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[67  0  0]\n",
      " [ 0  3  0]\n",
      " [ 0  0  4]]\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       1.00      1.00      1.00        67\n",
      "          1       1.00      1.00      1.00         3\n",
      "          3       1.00      1.00      1.00         4\n",
      "\n",
      "avg / total       1.00      1.00      1.00        74\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report, confusion_matrix  \n",
    "print(confusion_matrix(y_test, y_pred))  \n",
    "print(classification_report(y_test, y_pred)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "error = []\n",
    "\n",
    "# Calculating error for K values between 1 and 40\n",
    "for i in range(1, 40):  \n",
    "    knn = KNeighborsClassifier(n_neighbors=i)\n",
    "    knn.fit(X_train, y_train)\n",
    "    pred_i = knn.predict(X_test)\n",
    "    error.append(np.mean(pred_i != y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Mean Error')"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 6))  \n",
    "plt.plot(range(1, 40), error, color='red', linestyle='dashed', marker='o',  \n",
    "         markerfacecolor='blue', markersize=10)\n",
    "plt.title('Error Rate K Value')  \n",
    "plt.xlabel('K Value')  \n",
    "plt.ylabel('Mean Error')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.15"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
